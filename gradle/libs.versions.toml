[versions]
vertx = '4.3.1'
groovy = '4.0.3'
lombok = '1.18.24'
micronaut = '3.5.2'
jackson = '2.13.3'
slf4j = '1.7.36'
log4j2 = '2.17.2'
assertj = '3.23.1'
spock = '2.2-M1-groovy-4.0'
byte-buddy = '1.12.11'
objenesis = '3.2'

# gradle plugins versions
plugin-integration-test = '1.4.0'
plugin-micronaut = '3.4.1'


########################################################################################################################
[libraries]
lombok = { module = 'org.projectlombok:lombok', version.ref = 'lombok' }
groovy = { module = 'org.apache.groovy:groovy', version.ref = 'groovy' }
vertx-core = { module = 'io.vertx:vertx-core', version.ref = 'vertx' }
vertx-lang-groovy = { module = 'io.vertx:vertx-lang-groovy', version.ref = 'vertx' }
vertx-rxjava3 = { module = 'io.vertx:vertx-rx-java3', version.ref = 'vertx' }
vertx-junit5 = { module = 'io.vertx:vertx-junit5', version.ref = 'vertx' }
vertx-cluster-hazelcast = { module = 'io.vertx:vertx-hazelcast', version.ref = 'vertx' }
micronaut-inject-java = { module = 'io.micronaut:micronaut-inject', version.ref = 'micronaut' }
micronaut-validation = { module = 'io.micronaut:micronaut-validation', version.ref = 'micronaut' }
jackson-databind = { module = 'com.fasterxml.jackson.core:jackson-databind', version.ref = 'jackson' }
jackson-dataformat-yaml = { module = 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml', version.ref = 'jackson' }
slf4j-api = { module = 'org.slf4j:slf4j-api', version.ref = 'slf4j' }
log4j2-api = { module = 'org.apache.logging.log4j:log4j-api', version.ref = 'log4j2' }
log4j2-core = { module = 'org.apache.logging.log4j:log4j-core', version.ref = 'log4j2' }
log4j2-slf4j = { module = 'org.apache.logging.log4j:log4j-slf4j-impl', version.ref = 'log4j2' }

# testing
assertj-core = { module = 'org.assertj:assertj-core', version.ref = 'assertj' }
spock-core = { module = 'org.spockframework:spock-core', version.ref = 'spock' }
byte-buddy = { module = 'net.bytebuddy:byte-buddy', version.ref = 'byte-buddy' }
objenesis = { module = 'org.objenesis:objenesis', version.ref = 'objenesis' }


########################################################################################################################
[bundles]


########################################################################################################################
[plugins]
integration-test = { id = 'com.coditory.integration-test', version.ref = 'plugin-integration-test' }
micronaut = { id = 'io.micronaut.library', version.ref = 'plugin-micronaut' }
